<!-- Masthead
================================================== -->
<header class="jumbotron subhead" id="overview">
  <h1>{{_i}}HTML5 Boilerplate{{/i}} <small>{{_i}}Kickstrap Only{{/i}}</small></h1>
  <p class="lead">See the <a href="http://html5boilerplate.com/docs/"><i class="icon-book"></i> full docs</a> for more.</p>
  <div class="subnav">
    <ul class="nav nav-pills">
      <li><a href="#modernizr">Modernizr</a></li>
      <li><a href="#buildscript">Build Script</a></li>
    </ul>
  </div>
</header>
<div class="row">
  <div class="span6">
    <div class="page-header">
      <h2>About</h2>
    </div>
    <blockquote>
      <p>"HTML5 Boilerplate is the professional badass's base HTML/CSS/JS template for a fast, robust and future-safe site.</p><br />
	  <p>After more than three years in iterative development, you get the best of the best practices baked in: cross-browser normalization, performance optimizations, even optional features like cross-domain Ajax and Flash. A starter apache .htaccess config file hooks you the eff up with caching rules and preps your site to serve HTML5 video, use @font-face, and get your gzip zipple on.</p><br />
	  <p>Boilerplate is not a framework, nor does it prescribe any philosophy of development, it's just got some tricks to get your project off the ground quickly and right-footed."</p>
    </blockquote>
    <p><em><a href="http://html5boilerplate.com/">Source</a></em></p>
    <p>The Bootstrap project does not run the entirety of H5BP yet does use many components, such as the css reset. Because Kickstrap runs as a layer on top of Bootstrap, I decided not to include the entire H5BP download so as not to use redundant code.</p>
  </div>
  
  <div class="span6">
    <div class="page-header">
  	  <h2>The core of HTML5 Boilerplate</h2>
  	</div>
    <ul>
      <li><p><a href="http://html5boilerplate.com/docs/html">HTML <i class="icon-external-link"></i></a> - A walkthrough of the default HTML.</p></li>
      <li><p><a href="http://html5boilerplate.com/docs/css">CSS <i class="icon-external-link"></i></a> - Line by line explanation of the default CSS.</p></li>
      <li><p><a href="http://html5boilerplate.com/docs/js">JavaScript <i class="icon-external-link"></i></a> - Details on the JavaScript that is included by default</p></li>
      <li><p><a href="http://html5boilerplate.com/docs/crossdomain">crossdomain.xml <i class="icon-external-link"></i></a> - What it's used for and why.</p></li>
      <li><p><a href="http://html5boilerplate.com/docs/htaccess">.htaccess <i class="icon-external-link"></i></a> - The Apache web server config (<a href="https://github.com/h5bp/server-configs">other server config files</a>).</p></li>
    </ul>
  </div>
  
</div>

<section id="modernizr">
  <div class="page-header">
    <h2>Modernizr</h2>
    <p><a href="#overview">Back to top</a></p>
  </div>
  <div class="row">
    <div class="span6">
      <p>Modernizr is a free javascript tool which implements new web technology (e.g. HTML5, CSS3,â€¦) into older browsers which would otherwise not support it.</p>
      <p>As part of HTML5 Boilerplate, this is already included in Kickstrap and linked in the sample documents. If, however, you need to do this manually, simply add this line to the head section of the html</p>
<pre>&lt;script type=&quot;text/javascript&quot; src=&quot;extras/html5bp/js/libs/modernizr-2.5.3.min.js&quot;&gt;&lt;/script&gt;</pre>
      <p>This merely loads the Modernizr library. To start customizing Modernizr to display your advanced elements, continue to <a href="#polyfills"><em>Polyfills</em></a></p>
      <p><em><i class="icon-pushpin"></i> Tip: To improve page load speed, try <a href="http://www.modernizr.com/download/">customizing your Modernizr file</a> to include only what you need.</em></p>
    </div>
    <div class="span4 offset1">
      <img src="assets/img/modernizr.png" alt="modernizr" /><br /><hr />
      <h2><a href="http://www.modernizr.com/docs/#installing"><i class="icon-book"></i> Read the full tutorial</a></h2>
	  <h2><a href="https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills"><i class="icon-search"></i> Find Polyfills</a></h2>
    </div>
  </div>
  <div class="row" id="polyfills">
    <div class="span12">
      <h3>Polyfills</h3>
    </div>
  </div>
  <div class="row">
    <div class="span6">
      <p>To use a polyfill, call the <code>Modernizr.load</code> function. Specify your test and which polyfill to use as a fallback.</p>
      <p>As an example, this is how we would load a polyfill for geolocation after downloading geo-polyfill.js</p>
<pre>Modernizr.load({
  test: Modernizr.geolocation,
  yep : 'geo.js',
  nope: 'geo-polyfill.js'
});</pre>
	  <p>The "yep" and "nope," from yesnope.js on which Modernizr is based, will load the default geolocation script if the browser supports the feature ("yep" condition) or a javascript file suited for older browsers, geo-polyfill.js ("nope" condition).</p>
    </div>
    <div class="span4 offset1">

    </div>
  </div>
</section>

<section id="buildscript">
  <div class="page-header">
    <h2>Build Script</h2>
    <p><a href="#overview">Back to top</a></p>
  </div>
  <div class="row">
    <div class="span6">
      <p>As Paul Irish, co-creator of HTML5 Boilerplate, explains, there are entire books devoted to making your page run faster and more efficiently.</p> 
      <p>The build script is a simple package of code which, when executed, looks for your images, javascript files, and css files and minifies/compresses them. This decreases their file size and allows them to download much faster.</p>
      <h3>Don't fear the command line</h3>
      <p>The buildscript may sound a little advanced, but with the right environment, you'll only need to follow a couple simple steps to run it. H5BP has made the buildscript completely automated, utilizing advanced libraries for image and script compression. Mainly, you'll just need to tell your terminal where to find the script and execute it with a couple magic words.</p>
      <h3>First time usage</h3>
      <p>If running on a mac, you'll probably need to install optipng and jpegtran. Windows users may need to take a few additional steps.</p>
      <h4>Instructions</h4><br />
      <p><a href="http://html5boilerplate.com/docs/Build-script/#if-youre-on-mac-or-linux"><i class="icon-book"></i> Mac Users</a></p>
      <p><a href="http://html5boilerplate.com/docs/Build-script/#if-youre-on-windows"><i class="icon-book"></i> Windows Users</a></p>
    </div>
    <iframe class="span6" height="400" src="http://www.youtube.com/embed/OXpCB3U_4Ig" frameborder="0" allowfullscreen></iframe>
  </div>
  <div class="row">
    <div class="span6">
      <h3>Running the script</h3>
      <p><em><a href="using-the-build-script"><i class="icon-book"></i> Taken from the docs</a></em></p>
      <ul class="unstyled">
        <li>1) Mac users, open the application "Terminal".  Windows users, open command line interface by doing Start Menu > Run > <code><span class="pln">cmd</span><span class="pun">.</span><span class="pln">exe</span></code>.  However for Windows users, they've created a friendly <code><span class="pln">runbuildscript</span><span class="pun">.</span><span class="pln">bat</span></code> file for you if you'd like to avoid the command line and navigate to the build directory within your project. </li>
        </ul>
        
        <p>For those of you new to terminal or command line, use the change directory command followed by the directory path. for example...</p>
        
        <pre><code><span class="pln">cd sites</span><span class="pun">/</span><span class="pln">your</span><span class="pun">-</span><span class="pln">site</span><span class="pun">/</span><span class="pln">build</span><span class="pun">/</span><span class="pln"><br /></span></code></pre>
        <p>That can be pretty tedious, so you may prefer to just find the "build" folder in your explorer or finder and drag it into the command window. This works on Mac at least.</p>
        <p>To do this, simply type <code>cd</code> followed by a space, drag the build folder on top of the terminal and hit enter. Now you should be ready to type <code>ant build</code>.</p>
        <blockquote>
          <p>Note: To ensure you've navigated to the correct directory, you may want to now check the files within the current directory. Mac users can type "ls" in terminal. Windows users should type "dir" in command line. If the file list returned is what you were expecting, move to step 2. Otherwise, check the directory location in Finder or Windows Explorer and start over.</p>
        </blockquote>
        
        <ul class="unstyled">
        <li><p>2) Next, simply type:</p>
        
        <p>ant build</p></li>
        </ul>
        
        <p>The H5BP build script will begin to run and compress your files.  At the very end you should see "BUILD SUCCESSFUL" followed by the total time it took to build.</p>
        
        <ul>
        <li>3) Now, look in your H5BP project folder at <code>extras/html5bp/</code> and see that there is a newly created "publish" directory within your project.  Inside, you will find your minified CSS, JS and along with duplicates of the files from your original directory. This new set of files within "publish" is your production code.  The site should look and function the same in browser as it did before, but only now faster!</li>
      </ul>
    </div>
  </div>
</section>
